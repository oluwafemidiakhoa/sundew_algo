name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # dev install includes numpy, pytest, pytest-cov, flake8
          pip install -e .[dev]

      - name: Lint with flake8
        run: |
          # Stop build if there are syntax errors or undefined names
          flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings (good for gradual cleanup)
          flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=80

      # Optional: Upload coverage to Codecov
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}  # only needed for private repos
      #     files: ./coverage.xml
      #     flags: unittests
      #     fail_ci_if_error: true

      # Optional: Upload coverage to Coveralls
      # - name: Upload coverage to Coveralls
      #   uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
